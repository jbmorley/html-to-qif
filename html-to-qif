#!/usr/bin/env python

import argparse
import datetime
import lxml.etree
import lxml.html

def formatdate(date, year = None):
    components = date.split(" ")
    day = int(components[0])
    month = components[1]
    if month == "Sep":
        month = 9
    elif month == "Oct":
        month = 10
    elif month == "Nov":
        month = 11
    elif month == "Dec":
        month = 12
    else:
        exit("Unknown month '%s'" % month)
    if year == None:
        year = datetime.datetime.now().year
    return "%02d/%02d/%s" % (day, month, year)

def main():
    parser = argparse.ArgumentParser(description = "Convert an HSBC HTML statement to Quicken QIF file format")
    parser.add_argument("input", help = "Input HTML statement")
    parser.add_argument("output", help = "Output QIF file")
    parser.add_argument("--year", "-y", help = "Statement year")
    options = parser.parse_args()

    data = None
    with open(options.input, 'r') as f:
        data = f.read();

    with open(options.output, 'w') as f:
        f.write("!Type:Oth L\n")
        tree = lxml.html.fromstring(data)
        transactions = tree.xpath("//table[@summary='This table contains a statement of your account']/tbody/tr")[1:-1]
        for transaction in transactions:
            columns = map(lambda x: x.xpath("string()").strip(), transaction.iter('td'))
            date = columns[0]
            description = columns[2]
            value = None
            if (columns[3] != ""):
                value = float(columns[3]) * -1
            elif (columns[4] != ""):
                value = float(columns[4])
            else:
                exit("Unable to find value for transaciton")
            f.write("D%s\n" % formatdate(date, options.year))
            f.write("T%.02f\n" % value)
            f.write("P%s\n" % description)
            f.write("^\n")
        f.write("\n")

if __name__=='__main__':
    main()
